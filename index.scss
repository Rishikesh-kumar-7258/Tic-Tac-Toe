//some variables for the css
$fontclr: blue;

@mixin shadow($var1, $var2, $fontclr1, $fontclr2, $text) {
	@if ($text == false) {
		box-shadow: $var1 $var1 $var2 $fontclr2, $var1 $var1 $var2 $fontclr1, $var1 $var1 $var2 $fontclr1,
			$var1 $var1 $var2 $fontclr1, $var1 $var1 $var2 $fontclr1, $var1 $var1 $var2 $fontclr1;
	} @else {
		text-shadow: $var1 $var1 $var2 $fontclr2, $var1 $var1 $var2 $fontclr1, $var1 $var1 $var2 $fontclr1,
			$var1 $var1 $var2 $fontclr1, $var1 $var1 $var2 $fontclr1, $var1 $var1 $var2 $fontclr1;
	}
}

//defining css default css for our code
* {
	margin: 0;
	padding: 0;
	text-decoration: none;
	list-style: none;
}

//defining css for the body
body {
	width: 100vw;
	height: 100vh;
	min-width : 350px;
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	height: 10vh;
	background-color: rgb(90, 122, 90);
}

//css for the header file
header {
	grid-column: span 12;
	background-color: lightgreen;
	padding: 1rem;
	color: blueviolet;
	cursor: pointer;

	//css for h1 in our header file
	h1 {
		display: flex;
		justify-content: center;

		//css for the different parts of the word and animating them
		span.red {
			animation: 1s linear 0.2s move_right;
			@include shadow(2px, 4px, brown, red, true);
		}
		span.blue {
			animation: 1s linear 0.2s move_left;
			@include shadow(2px, 4px, lightblue, blue, true);
		}
		span.yellow {
			animation: 1.6s ease-in 0.2s move_down;
			@include shadow(2px, 4px, gold, yellow, true);
		}

		@keyframes move_right {
			from {
				transform: translateX(-40vw) rotate(0);
			}

			to {
				transform: translateX(0vw) rotate(720deg);
			}
		}

		@keyframes move_left {
			from {
				transform: translateX(40vw) rotate(0deg);
			}
			to {
				transform: translateX(0vw) rotate(-720deg);
			}
		}

		@keyframes move_down {
			from {
				transform: translateY(-40vh);
			}
			to {
				transform: translateY(0vh);
			}
		}
	}
}

//defining css for the navbar
nav {
	grid-column: span 12;
	background-color: mediumseagreen;

	//defining css for our settings menu
	#settings {
		padding: 0 0.5rem;
		width: fit-content;

		//css for the buttons inside the setting menu
		button {
			border: 1px solid green;
			color: green;
			padding: 0.5rem;
			cursor: pointer;
		}
		button:hover {
			color: white;
			background-color: green;
		}

		//css for the color picker and options
		#dropdown {
			display: none;
			position: absolute;
			align-items: center;
			input {
				height: 2rem;
			}
			button {
				height: 2rem;
			}
			#buttons {
				display: flex;
				flex-direction: column;
				justify-content: center;
			}
		}
	}
	#settings:hover #dropdown {
		display: flex;
		flex-direction: column;
	}
}

//css for the game area
section {
	grid-column:span 6;
	margin-top: 2rem;
	height: 70vh;
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: repeat(4, 1fr);
	align-content: center;
	place-items: center;

	//css for the buttons downside of the board
	#fill_opt {
		place-self : end;
		display: flex;
		flex-direction: column;
		width: 100%;
		max-width : 350px;
		justify-content: space-evenly;
		grid-column: span 4;
		height: 100%;
		transform: translate(0, 10px);
		> button {
			cursor: pointer;
		}
		button {
			height: 2rem;
			padding : 3px;
			color: maroon;
			border: 1px solid maroon;
			border-radius: 1rem;
		}
		> button:hover {
			background-color: maroon;
			color: white;
		}

		#playerchoice {
			display: flex;
			flex-direction: row;
			align-items: center;
			justify-content: space-between;

			button {
				width: 45%;
			}
		}
	}

	//css for our board
	#board {
		$blocksize: 100px;
		cursor: pointer;
		grid-column: span 3;
		grid-row: 1 / span 3;
		display: grid;
		grid-template-columns: repeat(3, $blocksize);
		grid-template-rows: repeat(3, $blocksize);
		place-self : end;
		place-content: center;

		.block {
			box-sizing: border-box;
			background-color: darkgoldenrod;
			border: 2px solid darkred;
			border-radius: 1rem;
			display: grid;
			text-align: center;
			align-content: center;
			font-size: 3em;
			color: $fontclr;
			box-shadow: 3px 3px 5px black;
			@include shadow(2px, 4px, blue, blue, true);
			transform: rotate(45deg);
			P {
				transform: rotate(-45deg);
			}
		}
		.selected{
			background : green;
		}

		.block:hover {
			transform: scale(1.1) rotate(45deg);
		}
	}
}

//css for our logging section
section#log {
	display: flex;
	flex-direction: column;
	color: orange;
	h1 {
		color: brown;
	}

	button {
		width: 30%;
		height: 2rem;
		padding: 0.5rem;
		border: 1px solid green;
		color: green;
		font-size: 1rem;
	}
	button:hover {
		background-color: green;
		color: white;
	}
}

//utilities
.red {
	color: red;
}
.yellow {
	color: yellow;
}
.blue {
	color: darkblue;
}

.inactive{
	background : gray;
}

//making our webpage more responsive
@media (max-width: 1000px) {
	section {
		grid-column: span 6;
	}
}

@media (max-width : 650px)
{
	section{
		grid-column: span 12;
		place-items: center;

		#board, #fill_opt{
			place-self : center;
		}
	}

}